{
  "_type": "export",
  "__export_format": 4,
  "__export_date": "2023-07-28T17:19:46.039Z",
  "__export_source": "insomnia.desktop.app:v2023.4.0",
  "resources": [
    {
      "_id": "req_22aa980a59124c82b965d1f4e6f6d5cc",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1690562921733,
      "created": 1689249071999,
      "url": "{{base_url}}/auth/sign-in",
      "name": "Sign In ",
      "description": "",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"email\": \"me@patogordo.dev\",\n\t\"password\": \"12345678\"\n}\n"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": {},
      "metaSortKey": -1689105918420.5,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_756e60147bb44cc18fa206d4955df429",
      "parentId": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "modified": 1689257994411,
      "created": 1689249070578,
      "name": "auth",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1689253529566,
      "_type": "request_group"
    },
    {
      "_id": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "parentId": null,
      "modified": 1689249013564,
      "created": 1689249013564,
      "name": "nuxt-starter.yaml",
      "description": "",
      "scope": "design",
      "_type": "workspace"
    },
    {
      "_id": "req_8c03bad7e62246dabc177c1f4d5f6887",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1690554380858,
      "created": 1689257454385,
      "url": "{{base_url}}/auth/sign-up",
      "name": "Sign Up ",
      "description": "",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"name\": \"PatoGordo\",\n\t\"email\": \"no-reply@patogordo.dev\",\n\t\"password\": \"12345678\"\n}\n"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": {},
      "metaSortKey": -1689058200561,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_05cee646ec5447569752c5ed6e359e90",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1689346753843,
      "created": 1689257469672,
      "url": "{{base_url}}/auth/sign-out",
      "name": "Sign Out ",
      "description": "",
      "method": "POST",
      "body": { "mimeType": "application/json", "text": "" },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1688962764842,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_d3844d347200495c9ecd36c770d91886",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1689356649883,
      "created": 1689257704140,
      "url": "{{base_url}}/auth/refresh-token",
      "name": "Refresh Token",
      "description": "",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"refresh_token\": \"{{refresh_token}}\"\n}\n"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": {},
      "metaSortKey": -1688915046982.5,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_bb322d17b1b04df287660a9f15f5748a",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1689591972670,
      "created": 1689257958473,
      "url": "{{base_url}}/auth/forgot-password",
      "name": "Forgot Password",
      "description": "",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"email\": \"me@patogordo.dev\"\n}\n"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": {},
      "metaSortKey": -1688891188052.75,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_0eb307724b924f96ad9c2f8ea66244cf",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1689592068635,
      "created": 1689258293627,
      "url": "{{base_url}}/auth/reset-password",
      "name": "Reset Password",
      "description": "",
      "method": "PATCH",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"token\": \"Xm3aGivFuCGRjCOAjNRaWqATHrNrxXmFFsG1\",\n\t\"new_password\": \"12345678\"\n}\n"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": {},
      "metaSortKey": -1688879258587.875,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_669f96f59b08482cac5af6fce87ec733",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1690562911428,
      "created": 1689258437264,
      "url": "{{base_url}}/auth/change-password",
      "name": "Change Password",
      "description": "",
      "method": "PATCH",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"old_password\": \"87654321\",\n\t\"new_password\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1688873293855.4375,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_df7e1a7901854579a650c04c91c43e11",
      "parentId": "fld_756e60147bb44cc18fa206d4955df429",
      "modified": 1689359114922,
      "created": 1689358007100,
      "url": "{{base_url}}/auth/revert-password-change",
      "name": "Revert Password Change",
      "description": "",
      "method": "PATCH",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"token\": \"khE95TjH24Y3ZJedVEltNCpXslZMkXub46Cy\"\n}"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1688870311489.2188,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_88a3f7f230b544c3b099619c50835080",
      "parentId": "fld_debab12b23dd4801a8670381e28cee84",
      "modified": 1690485850504,
      "created": 1689258369062,
      "url": "{{base_url}}/sessions",
      "name": "Find my opened sessions",
      "description": "",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": { "type": "bearer", "token": "{{_.bearer_token }}" },
      "metaSortKey": -1689257997398,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_debab12b23dd4801a8670381e28cee84",
      "parentId": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "modified": 1689258374034,
      "created": 1689258369057,
      "name": "sessions",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1689253529541,
      "_type": "request_group"
    },
    {
      "_id": "req_5ab777f024b548a18ff718a00866e646",
      "parentId": "fld_debab12b23dd4801a8670381e28cee84",
      "modified": 1690562940105,
      "created": 1689258369068,
      "url": "{{base_url}}/sessions",
      "name": "Finish a session",
      "description": "",
      "method": "DELETE",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"link\": \"R0fI34cSnRI6QcEc418GQeUD\"\n}\n"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{_.bearer_token }}" },
      "metaSortKey": -1689143938164.875,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_8054105baa2f44ca9542484aef5475ff",
      "parentId": "fld_eb342564b91d46b7a319de836f36682d",
      "modified": 1690543842482,
      "created": 1689257997398,
      "url": "{{base_url}}/users",
      "name": "Find all users in app",
      "description": "",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1689257997398,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_eb342564b91d46b7a319de836f36682d",
      "parentId": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "modified": 1689258583800,
      "created": 1689257988552,
      "name": "users",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1689253529516,
      "_type": "request_group"
    },
    {
      "_id": "req_db83e23581b24d769d7c0edf28eadc47",
      "parentId": "fld_f0f475031e9e436dba71702d970c3f42",
      "modified": 1690554254780,
      "created": 1689258036602,
      "url": "{{base_url}}/users/[id]",
      "name": "Find someone user data",
      "description": "",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1689902219723.5,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_f0f475031e9e436dba71702d970c3f42",
      "parentId": "fld_eb342564b91d46b7a319de836f36682d",
      "modified": 1690546447670,
      "created": 1690546442049,
      "name": "[id]",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1689215225185.5781,
      "_type": "request_group"
    },
    {
      "_id": "req_35de8d73dbb941fea41d83f82da4931f",
      "parentId": "fld_f0f475031e9e436dba71702d970c3f42",
      "modified": 1690555179057,
      "created": 1690552552247,
      "url": "{{base_url}}/users/[id]",
      "name": "Edit someone user data",
      "description": "",
      "method": "PUT",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"name\": \"string\",\n\t\"status\": \"approved\",\n\t\"role\": \"user\",\n\t\"email\": \"mail@email.com\"\n}\n"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1689833943185.25,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_30a516c3175049bab79e99f504e3f5ed",
      "parentId": "fld_f0f475031e9e436dba71702d970c3f42",
      "modified": 1690555346066,
      "created": 1690554269246,
      "url": "{{base_url}}/users/[id]",
      "name": "Delete someone user",
      "description": "",
      "method": "DELETE",
      "body": { "mimeType": "application/json", "text": "" },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1689799804916.125,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_720b7b2648294dc68a587b9920781823",
      "parentId": "fld_9ba41f417a074ed18fbdfc55cd8fce5a",
      "modified": 1690544980816,
      "created": 1690543866308,
      "url": "{{base_url}}/users/me",
      "name": "Find my user data",
      "description": "",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1689162948037.0625,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "fld_9ba41f417a074ed18fbdfc55cd8fce5a",
      "parentId": "fld_eb342564b91d46b7a319de836f36682d",
      "modified": 1690544951224,
      "created": 1690544947108,
      "name": "me",
      "description": "",
      "environment": {},
      "environmentPropertyOrder": null,
      "metaSortKey": -1689172452973.1562,
      "_type": "request_group"
    },
    {
      "_id": "req_fd0d1a9f97894d64b241f79ba3472e0f",
      "parentId": "fld_9ba41f417a074ed18fbdfc55cd8fce5a",
      "modified": 1690556964142,
      "created": 1689258045906,
      "url": "{{base_url}}/users/me",
      "name": "Update my user data",
      "description": "",
      "method": "PUT",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"name\": \"Test\"\n}"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1689162947987.0625,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_22c9b61747dd4cf88bd2a73d7d0799aa",
      "parentId": "fld_9ba41f417a074ed18fbdfc55cd8fce5a",
      "modified": 1690556519676,
      "created": 1689258742459,
      "url": "{{base_url}}/users/me",
      "name": "Delete my user data",
      "description": "",
      "method": "DELETE",
      "body": {
        "mimeType": "application/json",
        "text": "{\n\t\"password\": \"12345678\"\n}"
      },
      "parameters": [],
      "headers": [{ "name": "Content-Type", "value": "application/json" }],
      "authentication": { "type": "bearer", "token": "{{bearer_token}}" },
      "metaSortKey": -1689162947937.0625,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "req_7e384bb4a4674cb289aaa549b1aa7e2c",
      "parentId": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "modified": 1690563571492,
      "created": 1689260459543,
      "url": "{{base_url}}/feature",
      "name": "The feature",
      "description": "",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": { "type": "bearer", "token": "{{ _.bearer_token }}" },
      "metaSortKey": -1689253529466,
      "isPrivate": false,
      "settingStoreCookies": true,
      "settingSendCookies": true,
      "settingDisableRenderRequestBody": false,
      "settingEncodeUrl": true,
      "settingRebuildPath": true,
      "settingFollowRedirects": "global",
      "_type": "request"
    },
    {
      "_id": "env_cf1e7bc37d61f71f84eb6d18a8714c3ad1143730",
      "parentId": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "modified": 1689249080927,
      "created": 1689249013569,
      "name": "Base Environment",
      "data": {},
      "dataPropertyOrder": {},
      "color": null,
      "isPrivate": false,
      "metaSortKey": 1689249013569,
      "_type": "environment"
    },
    {
      "_id": "jar_cf1e7bc37d61f71f84eb6d18a8714c3ad1143730",
      "parentId": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "modified": 1689249013570,
      "created": 1689249013570,
      "name": "Default Jar",
      "cookies": [],
      "_type": "cookie_jar"
    },
    {
      "_id": "spc_9bd975a27c434a6686d387bd9a8622d4",
      "parentId": "wrk_69fe7c6f4e2f4f2e9430b75963bddfb1",
      "modified": 1690564378849,
      "created": 1690311779553,
      "fileName": "nuxt-starter.yaml",
      "contents": "openapi: 3.1.0\ninfo:\n  version: v1\n  title: Nuxt Starter\n  summary: Nuxt Starter API\n  description: Nuxt Starter is an fullstack nuxt 3 template, and this it the reference of the API part\n  termsOfService: 'https://nuxt-starter.patogordo.dev/terms-of-service'\n  contact:\n    name: PatoGordo\n    url: 'https://patogordo.dev'\n    email: conversecomicaro@gmail.com\n  license:\n    name: MIT\n    identifier: MIT\nservers:\n  - url: 'https://dev-nuxt-starter.patogordo.dev/api/v1'\n    description: Development\n  - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n    description: Production\npaths:\n  /auth/sign-in:\n    post:\n      tags:\n        - Authentication\n      summary: Sign In\n      description: With this endpoint you are able to login in the application and get a Bearer token to access other routes and operations\n      operationId: auth-sign-in\n      requestBody:\n        description: Sign In Example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n                password:\n                  type: string\n                  minLength: 8\n                  maxLength: 255\n              required:\n                - email\n                - password\n              x-examples:\n                Example 1:\n                  email: string\n                  password: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - admin\n                              - editor\n                              - user\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYmQ2YmIxN2UtMzRkYi00NTU3LWI4YTQtOTkzY2NiYjBjMWEwIiwibGluayI6IlFVSFN6Q0pSOEJqeHQxWjFFcW9HekVFWSIsImlhdCI6MTY4OTU5MTkzNSwiZXhwIjoxNjg5NTk1NTM1fQ.6OlXMmJUub2eeZIqYlAiRzLK6h0WmPHp_45i8eY0Wkg\n                      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsaW5rIjoiUVVIU3pDSlI4Qmp4dDFaMUVxb0d6RUVZIiwiaWF0IjoxNjg5NTkxOTM1LCJleHAiOjE2ODk4NTExMzV9.j2yKH2EdaT6ZPH7cUwboyjmNPR0ZRrgqqDCfCJ2cJCM\n                      user:\n                        id: bd6bb17e-34db-4557-b8a4-993ccbb0c1a0\n                        name: PatoGordo\n                        email: me@patogordo.dev\n                        password: protected-data\n                        status: approved\n                        role: user\n                        created_at: '2023-07-17T11:05:35.315Z'\n                        updated_at: '2023-07-17T11:05:35.315Z'\n                        deleted: false\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    examples:\n                      - Email or Password is incorrect!\n                  status_code:\n                    type: integer\n                    examples:\n                      - 400\n                  timestamp:\n                    type: string\n                    examples:\n                      - '2023-07-17T11:07:55.806Z'\n                  path:\n                    type: string\n                    examples:\n                      - /v1/api/auth/sign-in\n                  handled:\n                    type: boolean\n                    default: true\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    examples:\n                      - Your account is currently restricted! Contact the support to know the reason\n                  status_code:\n                    type: integer\n                    examples:\n                      - 403\n                  timestamp:\n                    type: string\n                    examples:\n                      - '2023-07-28T14:33:14.989Z'\n                  path:\n                    type: string\n                    examples:\n                      - /api/auth/sign-in\n                  handled:\n                    type: boolean\n                    default: true\n                x-examples:\n                  Example 1:\n                    message: Your account is currently restricted! Contact the support to know the reason\n                    status_code: 403\n                    timestamp: '2023-07-28T14:33:14.989Z'\n                    path: /api/auth/sign-in\n                    handled: true\n              examples:\n                Example 1:\n                  value:\n                    message: Your account is currently restricted! Contact the support to know the reason\n                    status_code: 403\n                    timestamp: '2023-07-28T14:33:14.989Z'\n                    path: /api/auth/sign-in\n                    handled: true\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /auth/sign-up:\n    post:\n      tags:\n        - Authentication\n      summary: Sign Up\n      description: With this endpoint you are able to register to the application and get an account to access other routes and operations\n      operationId: auth-sign-up\n      requestBody:\n        description: Sign Up Example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  minLength: 1\n                email:\n                  type: string\n                  format: email\n                password:\n                  type: string\n                  minLength: 8\n                  maxLength: 255\n              required:\n                - name\n                - email\n                - password\n              x-examples:\n                Example 1:\n                  email: string\n                  password: string\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - admin\n                              - editor\n                              - user\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiYmQ2YmIxN2UtMzRkYi00NTU3LWI4YTQtOTkzY2NiYjBjMWEwIiwibGluayI6IlFVSFN6Q0pSOEJqeHQxWjFFcW9HekVFWSIsImlhdCI6MTY4OTU5MTkzNSwiZXhwIjoxNjg5NTk1NTM1fQ.6OlXMmJUub2eeZIqYlAiRzLK6h0WmPHp_45i8eY0Wkg\n                      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsaW5rIjoiUVVIU3pDSlI4Qmp4dDFaMUVxb0d6RUVZIiwiaWF0IjoxNjg5NTkxOTM1LCJleHAiOjE2ODk4NTExMzV9.j2yKH2EdaT6ZPH7cUwboyjmNPR0ZRrgqqDCfCJ2cJCM\n                      user:\n                        id: bd6bb17e-34db-4557-b8a4-993ccbb0c1a0\n                        name: PatoGordo\n                        email: me@patogordo.dev\n                        password: protected-data\n                        status: approved\n                        role: user\n                        created_at: '2023-07-17T11:05:35.315Z'\n                        updated_at: '2023-07-17T11:05:35.315Z'\n                        deleted: false\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    examples:\n                      - Email already in use! Use another or login with this one.\n                  status_code:\n                    type: integer\n                    examples:\n                      - 400\n                  timestamp:\n                    type: string\n                    examples:\n                      - '2023-07-17T11:07:55.806Z'\n                  path:\n                    type: string\n                    examples:\n                      - /v1/api/auth/sign-up\n                  handled:\n                    type: boolean\n                    default: true\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /auth/sign-out:\n    post:\n      tags:\n        - Authentication\n      summary: Sign Out\n      description: With this endpoint you are able to sing out and end your session in the application.\n      operationId: auth-sign-out\n      requestBody:\n        description: Sign Up Example\n        content: {}\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                x-examples:\n                  Example 1:\n                    result: {}\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /auth/refresh-token:\n    post:\n      tags:\n        - Authentication\n      summary: Refresh Token\n      description: With this endpoint you are able to refresh your token and get a new one\n      operationId: auth-refresh-token\n      requestBody:\n        description: Refresh Token Example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                refresh_token:\n                  type: string\n              required:\n                - refresh_token\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                x-examples:\n                  Example 1:\n                    result: {}\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    examples:\n                      - '\"Your session has an invalid signature!\" OR  \"Your session was expired! Try to login again.\"'\n                  status_code:\n                    type: integer\n                    examples:\n                      - 401\n                  timestamp:\n                    type: string\n                    examples:\n                      - '2023-07-17T11:07:55.806Z'\n                  path:\n                    type: string\n                    examples:\n                      - /v1/api/auth/refresh-token\n                  handled:\n                    type: boolean\n                    default: true\n              examples:\n                Example 1:\n                  value:\n                    message: Your session has an invalid signature!\n                    status_code: 401\n                    timestamp: '2023-07-17T11:07:55.806Z'\n                    path: /v1/api/auth/refresh-token\n                    handled: true\n                Example 2:\n                  value:\n                    message: Your session was expired! Try to login again.\n                    status_code: 401\n                    timestamp: '2023-07-17T11:07:55.806Z'\n                    path: /v1/api/auth/refresh-token\n                    handled: true\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /auth/forgot-password:\n    post:\n      tags:\n        - Authentication\n      summary: Forgot Password\n      description: With this endpoint you are able to get a password reset email\n      operationId: auth-forgot-password\n      requestBody:\n        description: Forgot Password Example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                  format: email\n              required:\n                - email\n              x-examples:\n                Example 1:\n                  email: string\n                  password: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                        examples:\n                          - An email containing a reset password link was sent to your email! Access it to reset your password.\n                x-examples:\n                  Example 1:\n                    result:\n                      message: An email containing a reset password link was sent to your email! Access it to reset your password.\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    examples:\n                      - This email isn't registered in the app.\n                  status_code:\n                    type: integer\n                    examples:\n                      - 400\n                  timestamp:\n                    type: string\n                    examples:\n                      - '2023-07-17T11:07:55.806Z'\n                  path:\n                    type: string\n                    examples:\n                      - /v1/api/auth/forgot-password\n                  handled:\n                    type: boolean\n                    default: true\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /auth/reset-password:\n    patch:\n      tags:\n        - Authentication\n      summary: Reset Password\n      description: With this endpoint you are able to reset your password using a token that was sent to your emails\n      operationId: auth-reset-password\n      requestBody:\n        description: Reset Password Example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n                  minLength: 36\n                  maxLength: 36\n                new_password:\n                  type: string\n                  minLength: 8\n                  maxLength: 255\n              required:\n                - token\n                - new_password\n              x-examples:\n                Example 1:\n                  email: string\n                  password: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                        examples:\n                          - Password has been successfully reseted! You can login now with this new password.\n                x-examples:\n                  Example 1:\n                    result:\n                      message: An email containing a reset password link was sent to your email! Access it to reset your password.\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    examples:\n                      - 'Reset password link propabily is invalid, expired or already used!'\n                  status_code:\n                    type: integer\n                    examples:\n                      - 400\n                  timestamp:\n                    type: string\n                    examples:\n                      - '2023-07-17T11:07:55.806Z'\n                  path:\n                    type: string\n                    examples:\n                      - /v1/api/auth/reset-password\n                  handled:\n                    type: boolean\n                    default: true\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /auth/change-password:\n    patch:\n      tags:\n        - Authentication\n      summary: Change Password\n      description: |-\n        With this endpoint you are able to reset your password using the old one, you should to be logged-in to do this\n\n        Before you reset your password, an email will be sent warning that change, it email has an revert action link.\n      operationId: auth-change-password\n      requestBody:\n        description: Reset Password Example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                old_password:\n                  type: string\n                  minLength: 8\n                  maxLength: 255\n                new_password:\n                  type: string\n                  minLength: 8\n                  maxLength: 255\n              required:\n                - old_password\n                - new_password\n              x-examples:\n                Example 1:\n                  email: string\n                  password: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                        examples:\n                          - Your password was successfully changed!\n                x-examples:\n                  Example 1:\n                    result:\n                      message: An email containing a reset password link was sent to your email! Access it to reset your password.\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                    examples:\n                      - Your current password does not meet with the sent one in the request!\n                  status_code:\n                    type: integer\n                    examples:\n                      - 400\n                  timestamp:\n                    type: string\n                    examples:\n                      - '2023-07-17T11:07:55.806Z'\n                  path:\n                    type: string\n                    examples:\n                      - /v1/api/auth/change-password\n                  handled:\n                    type: boolean\n                    default: true\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /auth/revert-password-change:\n    patch:\n      tags:\n        - Authentication\n      summary: Revert Password Change\n      description: With this end point you are able to revert any password changes that occours in your account.\n      operationId: auth-revert-password-change\n      requestBody:\n        description: 'Revert Password Change Example '\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                token:\n                  type: string\n                  minLength: 36\n                  maxLength: 36\n              required:\n                - token\n              x-examples:\n                Example 1:\n                  email: string\n                  password: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      message:\n                        type: string\n                        examples:\n                          - '\"Password changed, successfully reverted! Please login and change your password to stay secure.'\n                x-examples:\n                  Example 1:\n                    result:\n                      message: An email containing a reset password link was sent to your email! Access it to reset your password.\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /sessions:\n    get:\n      tags:\n        - Sessions\n      summary: Find my opened sessions\n      description: With this end point you are able to list all opened sessions linked with your account.\n      operationId: session-index\n      requestBody:\n        description: 'Revert Password Change Example '\n        content: {}\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        link:\n                          type: string\n                        expires_at:\n                          type: string\n                        user_agent:\n                          type: string\n                        created_at:\n                          type: string\n                        updated_at:\n                          type: string\n                        user_id:\n                          type: string\n                x-examples:\n                  Example 1:\n                    result:\n                      - id: d9d714d6-8170-4f42-812e-eb797f44178c\n                        link: HbkKCqs4hDPZlSkflWmUuh4a\n                        expires_at: '2023-07-30T19:23:53.432Z'\n                        user_agent: insomnia/2023.4.0\n                        created_at: '2023-07-27T19:23:53.436Z'\n                        updated_at: '2023-07-27T19:23:53.436Z'\n                        user_id: bd6bb17e-34db-4557-b8a4-993ccbb0c1a0\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n    delete:\n      tags:\n        - Sessions\n      summary: Finish a Session\n      description: With this end point you are able finsih sessions that is linked to your account\n      operationId: session-delete\n      requestBody:\n        description: Finish a Session Example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                link:\n                  type: string\n                  minLength: 24\n                  maxLength: 24\n              required:\n                - link\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                x-examples:\n                  Example 1:\n                    result: {}\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  status_code:\n                    type: integer\n                  timestamp:\n                    type: string\n                  path:\n                    type: string\n                  handled:\n                    type: boolean\n                x-examples:\n                  Example 1:\n                    message: You cannot finish your current session!\n                    status_code: 403\n                    timestamp: '2023-07-27T19:52:08.464Z'\n                    path: /api/sessions\n                    handled: true\n              examples:\n                Example 1:\n                  value:\n                    message: You cannot finish your current session!\n                    status_code: 403\n                    timestamp: '2023-07-17T11:07:55.806Z'\n                    path: /api/sessions\n                    handled: true\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /users/me:\n    get:\n      tags:\n        - Users\n      summary: Find my user\n      description: With this end point any user in the application can see it own user data.\n      operationId: index-users-me\n      requestBody:\n        description: ''\n        content: {}\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      name:\n                        type: string\n                      email:\n                        type: string\n                      password:\n                        type: string\n                      status:\n                        type: string\n                      role:\n                        type: string\n                      created_at:\n                        type: string\n                      updated_at:\n                        type: string\n                      deleted:\n                        type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      id: bd6bb17e-34db-4557-b8a4-993ccbb0c1a0\n                      name: PatoGordo\n                      email: me@patogordo.dev\n                      password: $2a$12$pgFxQtKQ2i9i7HZY5B5XqO7.RaRnU9NWr.grxCgHzeCtwzI4bUn1G\n                      status: approved\n                      role: user\n                      created_at: '2023-07-17T11:05:35.315Z'\n                      updated_at: '2023-07-17T11:07:53.267Z'\n                      deleted: false\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n            multipart/form-data:\n              schema:\n                type: object\n            text/html:\n              schema:\n                type: object\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n    put:\n      tags:\n        - Users\n      summary: Edit my user\n      description: With this end point any user in the application are able to edit it own user data\n      operationId: put-users-me\n      requestBody:\n        description: User edit example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                x-examples:\n                  Example 1:\n                    result: {}\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n    delete:\n      tags:\n        - Users\n      summary: Delete my user\n      description: With this end point any user in the application are able to delete it own user data\n      operationId: delete-users-me\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                password:\n                  type: string\n                  minLength: 8\n                  maxLength: 255\n              required:\n                - password\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                x-examples:\n                  Example 1:\n                    result: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  status_code:\n                    type: integer\n                  timestamp:\n                    type: string\n                  path:\n                    type: string\n                  handled:\n                    type: boolean\n                x-examples:\n                  Example 1:\n                    message: Password is incorrect!\n                    status_code: 400\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    path: /api/users/me\n                    handled: true\n              examples:\n                Example 1:\n                  value:\n                    message: Password is incorrect!\n                    status_code: 400\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    path: /api/users/me\n                    handled: true\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  /users:\n    get:\n      tags:\n        - Users\n      summary: 'Find all users [restricted]'\n      description: With this end point admin and editors users are able to find all users in the application.\n      operationId: users-index\n      requestBody:\n        description: ''\n        content: {}\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        name:\n                          type: string\n                        email:\n                          type: string\n                        password:\n                          type: string\n                        status:\n                          type: string\n                        role:\n                          type: string\n                        created_at:\n                          type: string\n                        updated_at:\n                          type: string\n                        deleted:\n                          type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      - id: bd6bb17e-34db-4557-b8a4-993ccbb0c1a0\n                        name: PatoGordo\n                        email: me@patogordo.dev\n                        password: $2a$12$pgFxQtKQ2i9i7HZY5B5XqO7.RaRnU9NWr.grxCgHzeCtwzI4bUn1G\n                        status: approved\n                        role: user\n                        created_at: '2023-07-17T11:05:35.315Z'\n                        updated_at: '2023-07-17T11:07:53.267Z'\n                        deleted: false\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n            multipart/form-data:\n              schema:\n                type: object\n            text/html:\n              schema:\n                type: object\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  status_code:\n                    type: integer\n                  timestamp:\n                    type: string\n                  path:\n                    type: string\n                  handled:\n                    type: boolean\n                x-examples:\n                  Example 1:\n                    message: You have no permission to access this resource!\n                    status_code: 403\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    path: /api/users\n                    handled: true\n              examples:\n                Example 1:\n                  value:\n                    message: You have no permission to access this resource!\n                    status_code: 403\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    path: /api/users\n                    handled: true\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n  '/users/{id}':\n    get:\n      tags:\n        - Users\n      summary: 'Find someone user [restricted]'\n      description: With this end point admin and editors users are able to find all users in the application.\n      operationId: users-id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: ''\n        content: {}\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      name:\n                        type: string\n                      email:\n                        type: string\n                      password:\n                        type: string\n                      status:\n                        type: string\n                      role:\n                        type: string\n                      created_at:\n                        type: string\n                      updated_at:\n                        type: string\n                      deleted:\n                        type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      id: bd6bb17e-34db-4557-b8a4-993ccbb0c1a0\n                      name: PatoGordo\n                      email: me@patogordo.dev\n                      password: $2a$12$pgFxQtKQ2i9i7HZY5B5XqO7.RaRnU9NWr.grxCgHzeCtwzI4bUn1G\n                      status: approved\n                      role: user\n                      created_at: '2023-07-17T11:05:35.315Z'\n                      updated_at: '2023-07-17T11:07:53.267Z'\n                      deleted: false\n            application/xml:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                    properties:\n                      token:\n                        type: string\n                      refresh_token:\n                        type: string\n                      user:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          name:\n                            type: string\n                          email:\n                            type: string\n                          password:\n                            type: string\n                          status:\n                            enum:\n                              - approved\n                              - restricted\n                          role:\n                            enum:\n                              - user\n                              - editor\n                              - admin\n                          created_at:\n                            type: string\n                          updated_at:\n                            type: string\n                          deleted:\n                            type: boolean\n                x-examples:\n                  Example 1:\n                    result:\n                      token: string\n                      refresh_token: string\n                      user:\n                        id: string\n                        name: string\n                        email: string\n                        password: protected-data\n                        status: approved|restricted\n                        role: user|editor|admin\n                        created_at: string\n                        updated_at: string\n                        deleted: false\n            multipart/form-data:\n              schema:\n                type: object\n            text/html:\n              schema:\n                type: object\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  message:\n                    type: string\n                  status_code:\n                    type: integer\n                  timestamp:\n                    type: string\n                  path:\n                    type: string\n                  handled:\n                    type: boolean\n                x-examples:\n                  Example 1:\n                    message: You have no permission to access this resource!\n                    status_code: 403\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    path: /api/users\n                    handled: true\n              examples:\n                Example 1:\n                  value:\n                    message: You have no permission to access this resource!\n                    status_code: 403\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    path: /api/users/%5Bid%5D\n                    handled: true\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n    put:\n      tags:\n        - Users\n      summary: 'Edit someone user [restricted]'\n      description: With this end point admin users are able to edit users data in the application.\n      operationId: put-users-id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: User edit example\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                status:\n                  enum:\n                    - approved\n                    - restricted\n                email:\n                  type: string\n                role:\n                  enum:\n                    - admin\n                    - editor\n                    - user\n              x-examples:\n                Example 1:\n                  name: string\n                  status: string\n                  email: string\n                  role: string\n      responses:\n        '200':\n          description: OK\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  path:\n                    type: string\n                  handled:\n                    type: boolean\n                  message:\n                    type: string\n                  timestamp:\n                    type: string\n                  status_code:\n                    type: integer\n                x-examples:\n                  Example 1:\n                    path: /api/users\n                    handled: true\n                    message: You have no permission to access this resource!\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    status_code: 403\n              examples:\n                Example 1:\n                  value:\n                    path: /api/users/%5Bid%5D\n                    handled: true\n                    message: You have no permission to access this resource!\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    status_code: 403\n                Example 2:\n                  value:\n                    path: /api/users/%5Bid%5D\n                    handled: true\n                    message: You can't edit your own admin user!\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    status_code: 403\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\n    delete:\n      tags:\n        - Users\n      summary: 'Delete someone user [restricted]'\n      description: With this end point admin users are able to delete users data in the application.\n      operationId: delete-users-id\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content: {}\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  result:\n                    type: object\n                x-examples:\n                  Example 1:\n                    result: {}\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  path:\n                    type: string\n                  handled:\n                    type: boolean\n                  message:\n                    type: string\n                  timestamp:\n                    type: string\n                  status_code:\n                    type: integer\n                x-examples:\n                  Example 1:\n                    path: /api/users/%5Bid%5D\n                    handled: true\n                    message: You can't delete your own admin user!\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    status_code: 403\n              examples:\n                Example 1:\n                  value:\n                    path: /api/users/%5Bid%5D\n                    handled: true\n                    message: You have no permission to access this resource!\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    status_code: 403\n                Example 2:\n                  value:\n                    path: /api/users/%5Bid%5D\n                    handled: true\n                    message: You can't delete your own admin user!\n                    timestamp: '2023-07-28T11:32:08.031Z'\n                    status_code: 403\n      security:\n        - Authorization: []\n      servers:\n        - url: 'https://dev-nuxt-starter.patogordo.dev/api/v1'\n          description: Development\n        - url: 'https://nuxt-starter.patogordo.dev/api/v1'\n          description: Production\ntags:\n  - name: Authentication\n  - name: Sessions\n  - name: Users\ncomponents:\n  securitySchemes:\n    Authorization:\n      type: http\n      description: Your bearer access token\n      scheme: bearer\nx-internal: false",
      "contentType": "yaml",
      "_type": "api_spec"
    },
    {
      "_id": "env_a44690f6de9b4c04afda3ab1a22de5a9",
      "parentId": "env_cf1e7bc37d61f71f84eb6d18a8714c3ad1143730",
      "modified": 1690562742207,
      "created": 1689249081513,
      "name": "Development",
      "data": {
        "base_url": "http://localhost:3002/api/v1",
        "bearer_token": "{% response 'body', 'req_22aa980a59124c82b965d1f4e6f6d5cc', 'b64::JC5yZXN1bHQudG9rZW4=::46b', 'when-expired', 3600 %}",
        "refresh_token": "{% response 'body', 'req_22aa980a59124c82b965d1f4e6f6d5cc', 'b64::JC5yZXN1bHQucmVmcmVzaF90b2tlbg==::46b', 'when-expired', 3600 %}"
      },
      "dataPropertyOrder": {
        "&": ["base_url", "bearer_token", "refresh_token"]
      },
      "color": "#caa007",
      "isPrivate": false,
      "metaSortKey": 1689249081513,
      "_type": "environment"
    },
    {
      "_id": "env_599989bd08f649afa3d8619cd2e1babe",
      "parentId": "env_cf1e7bc37d61f71f84eb6d18a8714c3ad1143730",
      "modified": 1690562739295,
      "created": 1689249135015,
      "name": "Production",
      "data": {
        "base_url": "http://localhost:3002/api/v1",
        "bearer_token": "{% response 'body', 'req_22aa980a59124c82b965d1f4e6f6d5cc', 'b64::JC5yZXN1bHQudG9rZW4=::46b', 'when-expired', 3600 %}",
        "refresh_token": "{% response 'body', 'req_22aa980a59124c82b965d1f4e6f6d5cc', 'b64::JC5yZXN1bHQucmVmcmVzaF90b2tlbg==::46b', 'when-expired', 3600 %}"
      },
      "dataPropertyOrder": {
        "&": ["base_url", "bearer_token", "refresh_token"]
      },
      "color": "#8731dd",
      "isPrivate": false,
      "metaSortKey": 1689249135015,
      "_type": "environment"
    }
  ]
}
